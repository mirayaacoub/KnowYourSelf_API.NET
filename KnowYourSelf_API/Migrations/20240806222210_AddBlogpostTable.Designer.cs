// <auto-generated />
using System;
using KnowYourSelf_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KnowYourSelf_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240806222210_AddBlogpostTable")]
    partial class AddBlogpostTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KnowYourSelf_API.Models.Blogpost", b =>
                {
                    b.Property<int>("BlogpostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogpostId"));

                    b.Property<string>("BlogpostContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogpostImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogpostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogpostId");

                    b.HasIndex("TherapistId")
                        .IsUnique();

                    b.ToTable("Blogposts");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("DiagnosisHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Therapist", b =>
                {
                    b.Property<int>("TherapistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TherapistId"));

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TherapistId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "test@example.com",
                            IsVerified = true,
                            Password = "test",
                            Role = "Mira",
                            UserImageUrl = "http://example.com/image.jpg",
                            Username = "test"
                        });
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Blogpost", b =>
                {
                    b.HasOne("KnowYourSelf_API.Models.Therapist", "Therapist")
                        .WithOne("Blogpost")
                        .HasForeignKey("KnowYourSelf_API.Models.Blogpost", "TherapistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Patient", b =>
                {
                    b.HasOne("KnowYourSelf_API.Models.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("KnowYourSelf_API.Models.Patient", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Therapist", b =>
                {
                    b.HasOne("KnowYourSelf_API.Models.User", "User")
                        .WithOne("Therapist")
                        .HasForeignKey("KnowYourSelf_API.Models.Therapist", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.Therapist", b =>
                {
                    b.Navigation("Blogpost");
                });

            modelBuilder.Entity("KnowYourSelf_API.Models.User", b =>
                {
                    b.Navigation("Patient");

                    b.Navigation("Therapist");
                });
#pragma warning restore 612, 618
        }
    }
}
